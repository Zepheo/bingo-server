{"version":3,"sources":["redux/actions/actionTypes.js","img/GnomeHeader02-Header-110215.jpg","pages/Landing.js","redux/actions/index.js","components/BingoTile.js","redux/actions/actionEvents.js","components/BingoBoard.js","components/UserListItem.js","components/Log.js","components/Userlist.js","pages/PlayBingo.js","pages/Create.js","pages/Join.js","components/ProtectedRoute.js","components/CreateBingoTile.js","components/CreateBingoBoard.js","pages/CreateBingo.js","App.js","redux/middleware/socket.js","utils/arrayShuffle.js","redux/reducers/Bingo.js","redux/reducers/User.js","redux/reducers/Log.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","theme.js","index.js"],"names":["ADD_CARDS","SET_TICKED","RESET","ADD_PRESET_CARDS","REMOVE_PRESET_CARD","LOG_IN","LOG_OUT","ADD_ACTIVE_ROOMS","BINGO","SHOW_BOARD","RESET_BINGO","ADD_USERS","UPDATE_TICKED","ADD_CARD_ORDER","ADD_MESSAGE","RESET_MESSAGES","module","exports","useStyles","makeStyles","theme","wrapper","alignItems","justifyContent","display","flexDirection","button","margin","Landing","history","useHistory","goTo","page","push","className","Button","variant","color","onClick","addCards","cards","type","logIn","name","room","users","subscribeTo","event","handle","unsubscribeFrom","leave","done","backgroundColor","notDone","background","root","textAlign","height","width","fontFamily","paddingLeft","paddingRight","fontSize","cursor","rootNoHover","BingoTile","data","index","useSelector","s","User","dispatch","useDispatch","changeTicked","id","setTicked","emit","payload","userTick","text","free","Paper","ticked","Typography","BingoBoard","Bingo","cardOrder","useEffect","horizontal","slice","map","every","bool","vertical","some","hasHadBingo","GridList","cellHeight","cols","style","marginLeft","marginRight","i","GridListTile","key","padding","UserListItem","user","spacing","c","hasOwnProperty","find","card","Tooltip","title","placement","container","justifySelf","overflow","messageContainer","overflowY","scrollbarWidth","Log","messages","messagesEndRef","useRef","current","scrollIntoView","behavior","Divider","List","message","ListItem","ref","header","hideScroll","flex","userContainer","Userlist","logMsg","updateTicked","addCardOrder","Fragment","length","bingo","alignSelf","body","backgroundImage","Image","backgroundSize","PlayBingo","showBingo","playAgain","handleShowBoard","Modal","open","onClose","outline","checkboxContainer","Create","createRoom","useState","password","zones","state","setState","gotError","roomError","setRoomError","nameError","setNameError","console","log","action","onSubmit","e","preventDefault","handleCreateRoom","TextField","required","value","placeholder","onChange","target","autoComplete","error","helperText","FormControl","component","FormGroup","tempZones","checked","filter","zone","handleCheckboxChange","FormControlLabel","control","Checkbox","bwl","label","mc","zg","Join","setError","activeRooms","roomname","handleJoinRoom","InputLabel","Select","labelId","MenuItem","ProtectedRoute","Component","rest","render","props","to","pathname","from","location","SimpleDialog","selectedValue","Dialog","aria-labelledby","DialogTitle","ListItemText","primary","CreateBingoTile","submitCardText","editing","setOpen","multiline","rows","onKeyPress","charCode","handleSubmit","autoFocus","CreateBingoBoard","submitCards","Array","v","setCards","handleSubmitCardText","cardsToSend","CreateBingo","App","rooms","exact","path","socket","io","socketMiddleware","store","next","removeListener","handleEvent","result","on","arrayShuffle","array","tempArr","j","Math","floor","random","freeCard","initialState","splice","cardsReset","require","rootReducer","combineReducers","createStore","reducer","applyMiddleware","thunk","Boolean","window","hostname","match","createMuiTheme","palette","main","purple","secondary","green","overrides","MuiTextField","ReactDOM","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cee805a2.chunk.js","sourcesContent":["// Bingo\nexport const ADD_CARDS = 'ADD_CARDS';\nexport const SET_TICKED = 'SET_TICKED';\nexport const RESET = 'RESET';\nexport const ADD_PRESET_CARDS = 'ADD_PRESET_CARDS';\nexport const REMOVE_PRESET_CARD = 'REMOVE_PRESET_CARD';\n\n// User\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const ADD_ACTIVE_ROOMS = 'ADD_ACTIVE_ROOMS';\nexport const BINGO = 'BINGO';\nexport const SHOW_BOARD = 'SHOW_BOARD';\nexport const RESET_BINGO = 'RESET_BINGO';\nexport const ADD_USERS = 'ADD_USERS';\nexport const UPDATE_TICKED = 'UPDATE_TICKED';\nexport const ADD_CARD_ORDER = 'ADD_CARD_ORDER';\n\n// Log\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const RESET_MESSAGES = 'RESET_MESSAGES';","module.exports = __webpack_public_path__ + \"static/media/GnomeHeader02-Header-110215.a33cdeec.jpg\";","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    margin: 10\n  }\n}))\n\nexport default function Landing() {\n  const {wrapper, button} = useStyles();\n  const history = useHistory();\n\n  const goTo = (page) => {\n    history.push(page)\n  }\n\n  return (\n    <div className={wrapper}>\n      <h1>\n        Välkommen till bingo        \n      </h1>\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={button}\n          onClick={() => goTo('create')}\n        >\n          Create room\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          className={button}\n          onClick={() => goTo('join')}\n        >\n          Join room\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import { SET_TICKED, RESET, LOG_IN, LOG_OUT, ADD_CARDS, ADD_ACTIVE_ROOMS, BINGO, SHOW_BOARD, RESET_BINGO, ADD_USERS, UPDATE_TICKED, ADD_MESSAGE, RESET_MESSAGES, ADD_PRESET_CARDS, REMOVE_PRESET_CARD, ADD_CARD_ORDER } from './actionTypes';\nimport { CREATE, JOIN, USERTICK, RESET_TICKED, CREATE_CUSTOM, CUSTOM_CARDS, CARD_ORDER } from './actionEvents';\n\n//Bingo\nexport const addCards = (cards) => ({\n  type: ADD_CARDS,\n  cards\n})\nexport const setTicked = (id) => ({\n  type: SET_TICKED,\n  id\n})\nexport const reset = () => ({\n  type: RESET\n})\nexport const addPresetCards = (cards) => ({\n  type: ADD_PRESET_CARDS,\n  cards\n})\nexport const removePresetCard = (id) => ({\n  type: REMOVE_PRESET_CARD,\n  id\n})\n\n//User\n\nexport const logIn = (name, room, users) => ({\n  type: LOG_IN,\n  name,\n  room,\n  users,\n})\n\nexport const logOut = () => ({\n  type: LOG_OUT,\n})\n\nexport const addActiveRooms = (rooms) => ({\n  type: ADD_ACTIVE_ROOMS,\n  rooms\n})\n\nexport const bingo = () => ({\n  type: BINGO\n})\n\nexport const showBoard = () => ({\n  type: SHOW_BOARD\n})\n\nexport const resetBingo = () => ({\n  type: RESET_BINGO\n})\n\nexport const addUsers = (user) => ({\n  type: ADD_USERS,\n  user\n})\n\nexport const updateTicked = ({id, ticked}) => ({\n  type: UPDATE_TICKED,\n  id,\n  ticked\n})\n\nexport const addCardOrder = ({id, ticked}) => ({\n  type: ADD_CARD_ORDER,\n  id,\n  ticked\n})\n\n// Log\nexport const addMessage = (message) => ({\n  type: ADD_MESSAGE,\n  message\n})\n\nexport const resetMessages = () => ({\n  type: RESET_MESSAGES,\n})\n\n// Socket actions\n\nexport const create = (data) => ({\n  event: CREATE,\n  emit: true,\n  payload: data\n})\n\nexport const createCustom = (data) => ({\n  event: CREATE_CUSTOM,\n  emit: true,\n  payload: data\n});\n\nexport const sendCustomCards = (data) => ({\n  event: CUSTOM_CARDS,\n  emit: true,\n  payload: data\n});\n\nexport const sendCardOrder = (data) => ({\n  event: CARD_ORDER,\n  emit: true,\n  payload: data\n})\n\nexport const join = (data) => ({\n  event: JOIN,\n  emit: true,\n  payload: data\n})\n\nexport const userTick = (data) => ({\n  event: USERTICK,\n  emit: true,\n  payload: data\n})\n\nexport const resetTicked = (room) => ({\n  event: RESET_TICKED,\n  emit: true,\n  payload: room\n})\n\nexport const subscribeTo = (event, handle) => ({\n  event,\n  handle\n})\n\nexport const unsubscribeFrom = (event) => ({\n  event,\n  leave: true\n})\n","import React from 'react'\nimport { Paper, makeStyles, Typography } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setTicked, userTick } from '../redux/actions';\n\nconst useStyles = makeStyles({\n  done: {\n    backgroundColor: 'green',\n    color: 'white'\n  },\n  notDone: {\n    background: 'rgba(255, 255, 255, 0.5)'\n  },\n  root: {\n    display: 'flex',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '17vh',\n    width: '17vh',\n    fontFamily: 'roboto',\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: 20,\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  rootNoHover: {\n    display: 'flex',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '17vh',\n    width: '17vh',\n    fontFamily: 'roboto',\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: 20,\n  }\n});\n\nexport default function BingoTile({data, index}) {\n  const { room: { name }} = useSelector(s => s.User)\n  const { done, notDone, root, rootNoHover } = useStyles();\n  const dispatch = useDispatch();\n\n  const changeTicked = (id) => {\n    dispatch(setTicked(id))\n    dispatch(userTick({index, name, id: data.id, text: data.data}))\n  }\n\n  if (data.free) {\n    return (\n      <Paper\n      className={`${rootNoHover} ${data.ticked ? done : notDone}`}\n      variant='outlined'\n    >\n      <Typography>\n        {data.data}\n      </Typography>\n    </Paper>\n    )\n  }\n\n  return (\n    <Paper\n      className={`${root} ${data.ticked ? done : notDone}`}\n      variant='outlined'\n      onClick={() => changeTicked(data.id)}\n    >\n      <Typography>\n        {data.data}\n      </Typography>\n    </Paper>\n  )\n}\n","export const CREATE = 'create';\nexport const JOIN = 'join';\nexport const USERTICK = 'usertick';\nexport const RESET_TICKED = 'resetTicked';\nexport const CREATE_CUSTOM = 'createCustom';\nexport const CUSTOM_CARDS = 'customCards';\nexport const CARD_ORDER = 'cardOrder'; ","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport BingoTile from './BingoTile';\nimport { GridList, GridListTile } from '@material-ui/core';\nimport { bingo, sendCardOrder } from '../redux/actions';\n\nexport default function BingoBoard() {\n  const { Bingo: { cards, cardOrder}, User } = useSelector(s => s);\n  const { room : { name } } = User;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const horizontal = [\n      cards.slice(0,5).map(data => data.ticked).every(bool => bool),\n      cards.slice(5,10).map(data => data.ticked).every(bool => bool),\n      cards.slice(10,15).map(data => data.ticked).every(bool => bool),\n      cards.slice(15,20).map(data => data.ticked).every(bool => bool),\n      cards.slice(20,25).map(data => data.ticked).every(bool => bool)\n    ]\n    const vertical = [\n      [cards[0].ticked, cards[5].ticked, cards[10].ticked, cards[15].ticked, cards[20].ticked].every(bool => bool),\n      [cards[1].ticked, cards[6].ticked, cards[11].ticked, cards[16].ticked, cards[21].ticked].every(bool => bool),\n      [cards[2].ticked, cards[7].ticked, cards[12].ticked, cards[17].ticked, cards[22].ticked].every(bool => bool),\n      [cards[3].ticked, cards[8].ticked, cards[13].ticked, cards[18].ticked, cards[23].ticked].every(bool => bool),\n      [cards[4].ticked, cards[9].ticked, cards[14].ticked, cards[19].ticked, cards[24].ticked].every(bool => bool)\n    ]\n    const diagonalAndCorners = [\n      [cards[0].ticked, cards[6].ticked, cards[12].ticked, cards[18].ticked, cards[24].ticked].every(bool => bool),\n      [cards[4].ticked, cards[8].ticked, cards[12].ticked, cards[16].ticked, cards[20].ticked].every(bool => bool),\n    ]\n    if(diagonalAndCorners.some(bool => bool) || horizontal.some(bool => bool) || vertical.some(bool => bool)) {\n      if (!User.hasHadBingo)\n      dispatch(bingo());\n    }\n  }, [cards, User, dispatch])\n\n  useEffect(() => {\n    dispatch(sendCardOrder({cardOrder, room: name}));\n  }, [name, cardOrder, dispatch])\n\n  return (\n    <GridList cellHeight='auto' cols={5} style={{marginLeft: 10, marginRight: 10, width: '90vh', height: '90vh'}}>\n      {cards.map((data, i) => (\n        <GridListTile key={i}>\n          <BingoTile data={data} index={i}/>\n        </GridListTile>\n      ))}\n    </GridList>\n  )\n}\n","import React from 'react'\nimport { GridList, GridListTile, makeStyles, Typography, Tooltip } from '@material-ui/core'\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 5\n  },\n}))\n\nexport default function UserListItem({ user:{ name, ticked } }) {\n  const { Bingo: { cards } } = useSelector(s => s);\n  const { wrapper } = useStyles();\n\n  return (\n    <div className={wrapper}>\n      <Typography>\n        {name}\n      </Typography>\n      <GridList spacing={2} cellHeight={10} cols={5} style={{width: 58}}>\n        {ticked.map((c, i) => {\n          let text = '';\n          if (c.hasOwnProperty('id') && c.id) {\n            const { data } = cards.find(card => card.id === c.id)\n            text = data;\n          }\n          if (c.id === null) {\n            text = 'Free';\n          }\n          \n          return (\n            <Tooltip title={text || 'Loading...'} placement=\"bottom\" key={i}>\n              <GridListTile>\n                <div style={{ height: 10, width: 10, backgroundColor: c.ticked || i === 12 ? 'green' : 'red'}}/>\n              </GridListTile>\n            </Tooltip>\n          )\n        })}\n      </GridList>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Divider, makeStyles, List, ListItem, Typography } from '@material-ui/core'\nimport { useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    justifySelf: 'flex-end',\n    overflow: 'hidden',\n  },\n  messageContainer: {  \n    height: '20vh',\n    overflowY: 'auto',\n    scrollbarWidth: 'none',\n    '&::-webkit-scrollbar': {\n      display:'none'\n    },\n  }\n}))\n\nexport default function Log() {\n  const { container, messageContainer } = useStyles();\n  const messages = useSelector(s => s.Log)\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current !== null) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  return (\n    <div className={container}>\n      <Divider />\n      <List className={messageContainer}>\n      {messages.map((message, index) => \n        <ListItem key={index}>\n          <Typography>\n            {message}\n          </Typography>\n        </ListItem>\n      )}\n      <div ref={messagesEndRef} />\n    </List>\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles, Paper, List, ListItem, Divider, Typography } from '@material-ui/core'\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { subscribeTo, addUsers, updateTicked, addMessage, unsubscribeFrom, addCardOrder } from '../redux/actions';\nimport UserListItem from './UserListItem';\nimport Log from './Log';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    width: '20vw',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  header: {\n    textAlign: 'center',\n  },\n  hideScroll: {\n    flex: 1,\n    height: '100%',\n    overflow: 'hidden'\n  },\n  userContainer: {\n    height: '100%',\n    overflowY: 'auto',\n    scrollbarWidth: 'none',\n    '&::-webkit-scrollbar': {\n      display:'none'\n    },\n  }\n}))\n\nexport default function Userlist() {\n  const { room: { users } } = useSelector(s => s.User)\n  const dispatch = useDispatch();\n  const { container, header, userContainer, hideScroll } = useStyles();\n  \n  useEffect(() => {\n    dispatch(subscribeTo('userJoined', (data) => {\n      dispatch(addUsers(data))\n    }))\n    dispatch(subscribeTo('ticked', ({id, name, ticked, logMsg}) => {\n      dispatch(addMessage(logMsg))\n      dispatch(updateTicked({id, name, ticked}))\n    }))\n    dispatch(subscribeTo('newCardOrder', (data) => {\n      const {id, ticked} = data\n      dispatch(addCardOrder({id, ticked}));\n    }))\n\n    return () => {\n      dispatch(unsubscribeFrom('userJoined'))\n      dispatch(unsubscribeFrom('ticked'))\n      dispatch(unsubscribeFrom('newCardOrder'))\n    }\n  }, [dispatch])\n\n  return (\n    <Paper className={container}>\n      <Typography variant='h6' className={header}>\n        SCOREBOARD\n      </Typography>\n      <div className={hideScroll}>\n        <List className={userContainer}>\n          {users.map((user, i) => (\n            <React.Fragment key={i}>\n              <ListItem >\n                <UserListItem user={user} />\n              </ListItem>\n              {i < users.length -1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </div>\n      <Log />\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { makeStyles, Button, Modal } from '@material-ui/core'\n\nimport BingoBoard from '../components/BingoBoard'\nimport Image from '../img/GnomeHeader02-Header-110215.jpg'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { resetBingo, reset, resetTicked, showBoard } from '../redux/actions'\nimport Userlist from '../components/Userlist'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    height: '90%'\n  },\n  bingo: {\n    color: 'gold',\n    fontSize: 200,\n    textAlign: 'center'\n  },\n  button: {\n    alignSelf: 'center',\n    justifySelf: 'center',\n    margin: 10\n  },\n  '@global': {\n    body: {\n      backgroundImage: `url(${Image})`,\n      backgroundSize: 'cover'\n    }\n  }\n}))\n\nexport default function PlayBingo() {\n  const { showBingo, hasHadBingo, room: { name } } = useSelector((s) => s.User)\n  const dispatch = useDispatch();\n  const { container, bingo, button } = useStyles();\n\n  const playAgain = () => {\n    dispatch(reset());\n    dispatch(resetBingo())\n    dispatch(resetTicked(name))\n  }\n\n  const handleShowBoard = () => {\n    dispatch(showBoard())\n  }\n\n  return (\n    <React.Fragment>\n      <div className={container}>\n        <Modal\n          open={showBingo}\n          onClose={handleShowBoard}\n        >\n          <div style={{display: 'flex', flexDirection: 'column', width: '100%', outline: 0}}>\n            <p className={bingo}>\n              BINGO\n            </p>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleShowBoard} className={button}>Show board</Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={playAgain} className={button}>Play again</Button>\n          </div>\n        </Modal>\n        <BingoBoard />\n        <Userlist />\n      </div>\n        { !showBingo && hasHadBingo && <Button variant=\"contained\" color=\"secondary\" onClick={playAgain}>Play again</Button>}\n    </React.Fragment>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Button, TextField, makeStyles, FormGroup, Checkbox, FormControlLabel, FormControl } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { subscribeTo, addCards, logIn, create, unsubscribeFrom, createCustom, addPresetCards} from '../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexDirection: 'column',\n    display: 'flex',\n  },\n  checkboxContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: 10\n  },\n}))\n\nexport default function Create({createRoom}) {\n  const [ state, setState ] = useState({name: '', room: '', password: '', zones: []})\n  const [ roomError, setRoomError ] = useState({gotError: false, message: ''});\n  const [ nameError, setNameError ] = useState({gotError: false, message: ''});\n  const { container, checkboxContainer, button } = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(subscribeTo('roomCreated', (data) => {\n      dispatch(addCards(data.cards))\n      dispatch(logIn(data.name, data.room, data.users))\n      history.push('/bingo')\n    }));\n\n    dispatch(subscribeTo('roomCreationError', (data) => {\n      setRoomError({gotError: true, message: data})\n    }));\n\n    dispatch(subscribeTo('customRoomCreated', (data) => {\n      console.log(data);\n      dispatch(addPresetCards(data.cards))\n      history.push('/createbingoboard', {\n        room: data.room,\n        name: data.name\n      })\n    }));\n\n    return () => {\n      dispatch(unsubscribeFrom('roomCreated'))\n      dispatch(unsubscribeFrom('roomCreationError'))\n    }\n  }, [dispatch, history])\n\n  const handleCreateRoom = (e) => {\n    e.preventDefault();\n    dispatch(create(state));\n  };\n\n  const handleCreateCustomRoom = () => {\n    if (!state.room) setRoomError({gotError: true, message: 'Please fill out this field'});\n    if (!state.name) setNameError({gotError: true, message: 'Please fill out this field'});\n    if (!state.name || !state.room) return;\n    \n    dispatch(createCustom(state));\n  }\n\n  const handleCheckboxChange = (e) => {\n    let tempZones = [...state.zones]\n    if (e.target.checked) {\n      tempZones.push(e.target.name)\n    } else {\n      tempZones = tempZones.filter((zone) => zone !== e.target.name)\n    }\n    setState({...state, zones: [...tempZones]})\n  }\n\n  return (\n    <form id='createRoomForm' action='.' onSubmit={(e) => handleCreateRoom(e)} className={container}>\n      <TextField \n        required\n        id='username'\n        value={state.name}\n        placeholder='Username...'\n        variant='outlined'\n        onChange={(e) => setState({...state, name: e.target.value})}\n        autoComplete='off'\n        error={nameError.gotError}\n        helperText={nameError.message}\n      />\n      <TextField \n        required\n        id='roomname'\n        value={state.room}\n        placeholder='Roomname'\n        variant='outlined'\n        onChange={(e) => setState({...state, room: e.target.value})}\n        autoComplete='off'\n        error={roomError.gotError}\n        helperText={roomError.message}\n      />\n      <TextField \n        id='password'\n        type='password'\n        helperText='Leave blank for no password'\n        value={state.password}\n        placeholder='Password...'\n        variant='outlined'\n        onChange={(e) => setState({...state, password: e.target.value})}\n        autoComplete='off'\n      />\n      <FormControl \n        required\n        component='fieldset'\n      >\n        <FormGroup className={checkboxContainer} onChange={(e) => handleCheckboxChange(e)}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.zones.bwl}\n                name=\"bwl\"\n                color=\"primary\"\n              />\n            }\n            label=\"BWL\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.zones.mc}\n                name=\"mc\"\n                color=\"primary\"\n              />\n            }\n            label=\"MC\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.zones.zg}\n                name=\"zg\"\n                color=\"primary\"\n              />\n            }\n            label=\"ZG\"\n          />\n        </FormGroup>\n      </FormControl>\n      <Button type='submit' variant='contained' color='primary' className={button}>Create Room</Button>\n      <Button type='button' variant='contained' color='secondary' className={button} onClick={handleCreateCustomRoom}>Create room with custom cards</Button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { TextField, Button, makeStyles, Typography, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { join, subscribeTo, addCards, logIn, unsubscribeFrom } from '../redux/actions';\nimport { useEffect } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexDirection: 'column',\n    display: 'flex',\n  },\n  button: {\n    margin: 10\n  },\n}))\n\nexport default function Join() {\n  const [ state, setState ] = useState({name: '', room: '', password: ''})\n  const [ error, setError ] = useState({gotError: false, message: ''});\n  const User = useSelector(s => s.User)\n  const { container, button } = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(subscribeTo('roomJoined', (data) => {\n      dispatch(addCards(data.cards))\n      dispatch(logIn(data.name, data.room, data.users))\n      history.push('/bingo')\n    }))\n    dispatch(subscribeTo('passwordError', (data) => {\n      setError({gotError: true, message: data});\n    }))\n    return () => {\n      dispatch(unsubscribeFrom('roomJoined'))\n      dispatch(unsubscribeFrom('passwordError'))\n    }\n  }, [history, dispatch])\n\n  const handleJoinRoom = (e) => {\n    e.preventDefault();\n    dispatch(join({name: state.name, roomname: state.room.name, password: state.password}))\n  };\n\n  if (User.activeRooms.length < 1) {\n    return (\n      <>\n        <Typography variant='h6'>\n          No active rooms. Would you rather create a room?\n        </Typography>\n        <Button \n          variant='contained' \n          color='primary'\n          onClick={() => history.push('/create')}\n        >\n          Go to create\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <form id='createRoomForm' action='.' onSubmit={(e) => handleJoinRoom(e)} className={container}>\n      <TextField \n        required\n        id='username'\n        value={state.name}\n        placeholder='Username...'\n        variant='outlined'\n        onChange={(e) => setState({...state, name: e.target.value})}\n        autoComplete='off'\n      />\n      <FormControl variant='outlined' required>\n        <InputLabel id='select-room-label'>Room</InputLabel>  \n        <Select\n          labelId='select-room-label'\n          id='select-room'\n          value={state.room}\n          onChange={(e) => setState({...state, room: e.target.value})}\n        >\n          {User.activeRooms.map((room, i) => <MenuItem key={i} value={room}>{room.name}</MenuItem>)}\n        </Select>\n        {state.room.password &&\n          <TextField \n            id='password'\n            type='password'\n            label='Leave blank for no password'\n            value={state.password}\n            placeholder='Password...'\n            variant='outlined'\n            onChange={(e) => setState({...state, password: e.target.value})}\n            autoComplete='off'\n            error={error.gotError}\n            helperText={error.message}\n          />\n        }\n      </FormControl>\n      <Button type='submit' variant='contained' color='primary' className={button}>Join room</Button>\n    </form>\n  )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const user = useSelector((s) => s.User);\n  return (\n    <Route {...rest}\n      render={(props) => {\n        if (user.name) {\n          return <Component {...rest} {...props} />;\n        }\n        return <Redirect to={{ pathname: '/', state: { from: props.location } }} />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;","import React, { useState }  from 'react'\nimport { Paper, makeStyles, Typography, Button, TextField, Dialog, DialogTitle, List, ListItem, ListItemText } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removePresetCard } from '../redux/actions';\n\nconst useStyles = makeStyles({\n  button: {\n    margin: 5,\n  },\n  done: {\n    backgroundColor: 'green',\n    color: 'white'\n  },\n  root: {\n    display: 'flex',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '17vh',\n    width: '17vh',\n    fontFamily: 'roboto',\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: 20,\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  rootNoHover: {\n    display: 'flex',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '17vh',\n    width: '17vh',\n    fontFamily: 'roboto',\n    paddingLeft: 5,\n    paddingRight: 5,\n    fontSize: 20,\n  }\n});\n\nfunction SimpleDialog(props) {\n  const { Bingo } = useSelector(s => s);\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Choose preset</DialogTitle>\n      <List>\n        {Bingo.map((card) => (\n          <ListItem button onClick={() => handleListItemClick(card)} key={card.data}>\n            <ListItemText primary={card.data} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nexport default function CreateBingoTile({data, index, submitCardText}) {\n  const { done, root, rootNoHover, button } = useStyles();\n  const [ state, setState ] = useState({data: data.data, editing: false});\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitCardText(state.data, index);\n    setState({...state, editing: false})\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    if (value) {\n      setState({...state, data: value.data});\n      submitCardText(value.data, index);\n      dispatch(removePresetCard(value.id));\n    }\n  };\n\n  if (data.free) {\n    return (\n      <Paper\n      className={`${rootNoHover} ${done}`}\n      variant='outlined'\n    >\n      <Typography>\n        {data.data}\n      </Typography>\n    </Paper>\n    )\n  }\n\n  if (state.editing) {\n    return (\n      <Paper\n      className={root}\n      variant='outlined'\n    >\n      <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Card text...\"\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          value={state.data}\n          onKeyPress={(e) => {\n            if (e.charCode === 13) handleSubmit(e);\n          }}\n          onChange={(e) => setState({...state, data: e.target.value})}\n          autoComplete='off'\n          autoFocus={true}\n        />\n    </Paper>\n    )\n  }\n\n  if (state.data) {\n    return (\n      <Paper\n      className={root}\n      variant='outlined'\n      onClick={() => setState({...state, editing: true})}\n    >\n      <Typography>        \n        {state.data}\n      </Typography>\n    </Paper>\n    )\n  }\n\n  return (\n    <Paper\n      className={root}\n      variant='outlined'\n    >\n      <Typography>\n        <Button color='primary' variant='contained' onClick={() => setState({...state, editing: true})} className={button}>\n          Custom\n        </Button>\n        <Button color='secondary' variant='contained' className={button} onClick={handleClickOpen}>\n          Use preset\n        </Button>\n        <SimpleDialog  open={open} onClose={handleClose} />\n      </Typography>\n    </Paper>\n  )\n}\n","import React from 'react'\n\nimport CreateBingoTile from './CreateBingoTile';\nimport { GridList, GridListTile, makeStyles, Button } from '@material-ui/core';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    height: '90%'\n  },\n}))\n\nexport default function CreateBingoBoard({submitCards}) {\n  const [ cards, setCards ] = useState(Array.from(Array(25), (v, i) => i === 12 ? ({ id: i, data: 'Free', free: true }) : ({ id: i, data: '' })));\n  const { container } = useStyles();\n\n  const handleSubmitCardText = (text, index) => {\n    setCards((s) => s.map((card) => card.id === index ? ({...card, data: text}) : card));\n  } \n\n  return (\n    <div className={container}>\n      <GridList cellHeight='auto' cols={5} style={{marginLeft: 10, marginRight: 10, width: '90vh', height: '90vh'}}>\n        {cards.map((data, i) => (\n          <GridListTile key={i}>\n            <CreateBingoTile data={data} index={i} submitCardText={handleSubmitCardText}/>\n          </GridListTile>\n        ))}\n      </GridList>\n      {cards.every(v => v.data) &&\n        <Button \n          variant='contained'\n          color='primary'\n          onClick={() => {\n            const cardsToSend = cards.filter(v => !v.free)\n            submitCards(cardsToSend);\n          }}\n        >\n          Create\n        </Button>\n      }\n    </div>\n  )\n}","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport CreateBingoBoard from '../components/CreateBingoBoard';\nimport { useDispatch } from 'react-redux';\nimport { sendCustomCards, subscribeTo, addCards, logIn, unsubscribeFrom } from '../redux/actions';\nimport { useEffect } from 'react';\n\nexport default function CreateBingo() {\n  const history = useHistory();\n  const { location: { state: { name, room }}} = history;\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(subscribeTo('customRoomCreated', (data) => {\n      dispatch(addCards(data.cards))\n      dispatch(logIn(name, data.room, data.users))\n      history.push('/bingo')\n    }));\n    dispatch(subscribeTo('customRoomCreationError', (error) => {\n      console.log(error)\n      history.push('/create')\n    }));\n\n    return () => {\n      dispatch(unsubscribeFrom('customRoomCreated'))\n      dispatch(unsubscribeFrom('customRoomCreationError'))\n    }\n  })\n\n  const handleCreateCards = (cards) => {\n    dispatch(sendCustomCards({cards, room}))\n  }\n\n  return (\n    <CreateBingoBoard submitCards={handleCreateCards}/>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Landing from './pages/Landing';\nimport PlayBingo from './pages/PlayBingo';\nimport Create from './pages/Create';\nimport Join from './pages/Join';\nimport ProtectedRoute from './components/ProtectedRoute'\nimport { makeStyles } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { subscribeTo, addActiveRooms, unsubscribeFrom, logOut } from './redux/actions';\nimport CreateBingo from './pages/CreateBingo';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100wv',\n    height: '100vh'\n  }\n}))\n\n\nfunction App() {\n  const {wrapper} = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(subscribeTo('activeRooms', (data) => {\n      dispatch(addActiveRooms(data));\n    }))\n    \n    return () => {\n      dispatch(unsubscribeFrom('activeRooms'))\n      dispatch(logOut());\n    }\n  }, [dispatch])\n\n  return (\n    <BrowserRouter>\n      <div className={wrapper}>\n        <Switch>\n          <Route exact path='/' component={Landing}/>\n          <Route exact path='/create' component={Create} />\n          <Route exact path='/join' component={Join} />\n          <Route exact path='/createbingoboard' component={CreateBingo} />\n          <ProtectedRoute path='/bingo' component={PlayBingo} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import io from 'socket.io-client';\n\n// const socketUrl = process.env.NODE_ENV === 'development' ? 'localhost:8080': 'mighty-ridge-28972.herokuapp.com';\n// const config = {\n//   'reconnection': false\n// };\nconst socket = io();\n\nconst socketMiddleware = (store) => (next) => (action) => {\n    if (typeof action === 'function') {\n      return next(action);\n    }\n\n    const {\n      event,\n      leave,\n      handle,\n      emit,\n      payload,\n      ...rest\n    } = action;\n\n    if (!event) {\n      return next(action);\n    }\n\n    if (leave) {\n      socket.removeListener(event);\n    }\n\n    if (emit) {\n      socket.emit(event, payload);\n      return;\n    }\n\n    let handleEvent = handle;\n    if (typeof handleEvent === 'string') {\n      handleEvent = result => store.dispatch({ type: handle, result, ...rest });\n    }\n    return socket.on(event, handleEvent);\n}\n\nexport default socketMiddleware;","export default function arrayShuffle(array) {\n  const tempArr = [...array]\n  for (let i = tempArr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [tempArr[i], tempArr[j]] = [tempArr[j], tempArr[i]];\n  }\n  return tempArr;\n}","import arrayShuffle from '../../utils/arrayShuffle';\nimport { SET_TICKED, RESET, ADD_CARDS, ADD_PRESET_CARDS, REMOVE_PRESET_CARD } from '../actions/actionTypes';\n\nconst freeCard = {\n  data: 'Free',\n  ticked: true,\n  free: true,\n};\n\nconst initialState = {\n  cards: [],\n  cardOrder: []\n};\n\nconst Bingo = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CARDS:\n      const cards = arrayShuffle(action.cards);\n      cards.splice(12, 0, freeCard);\n      return {\n        cards, \n        cardOrder: cards.map(c => c.id)\n      }\n    case SET_TICKED:\n      return {\n        ...state,\n        cards: state.cards.map((data) => data.id === action.id ? ({...data, ticked: !data.ticked}): data)\n      };\n    case ADD_PRESET_CARDS:\n      return {\n        ...state,\n        cards: action.cards,\n      };\n    case REMOVE_PRESET_CARD:\n      return {\n        ...state,\n        cards: state.cards.filter(v => v.id !== action.id)\n      }\n    case RESET:\n      state.cards.splice(12, 1);\n      const cardsReset = arrayShuffle(state.cards).map((data) => ({...data, ticked: false}))\n      cardsReset.splice(12, 0, freeCard);\n      return {\n        cards: cardsReset,\n        cardOrder: cardsReset.map(c => c.id)\n      }\n    default:\n      return state;\n  }\n}\n\nexport default Bingo;","import { LOG_IN, LOG_OUT, ADD_ACTIVE_ROOMS, BINGO, SHOW_BOARD, RESET_BINGO, ADD_USERS, UPDATE_TICKED, ADD_CARD_ORDER } from \"../actions/actionTypes\";\n\nconst initialState = { name: null, room: null, activeRooms: [], hasHadBingo: false, showBingo: false};\n\nconst User = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return ({\n        ...state,\n        name: action.name,\n        room: {\n          name: action.room,\n          users: action.users\n        }\n      });\n    case ADD_ACTIVE_ROOMS:\n      return ({\n        ...state,\n        activeRooms: action.rooms\n      });\n    case ADD_USERS:\n      return ({\n        ...state,\n        room: {\n          ...state.room,\n          users: [...state.room.users, action.user]\n        }\n      });\n    case UPDATE_TICKED:\n      return ({\n        ...state,\n        room: {\n          ...state.room,\n          users: state.room.users.map((user) => user.id === action.id ? ({...user, ticked: action.ticked}) : user)\n        }\n      })\n    case ADD_CARD_ORDER:\n      return ({\n        ...state,\n        room: {\n          ...state.room,\n          users: state.room.users.map((user) => user.id === action.id ? ({...user, ticked: action.ticked}) : user)\n        }\n      })\n    case BINGO:\n      return ({\n        ...state,\n        hasHadBingo: true,\n        showBingo: true\n      })\n    case SHOW_BOARD:\n      return ({\n        ...state,\n        showBingo: false\n      })\n    case RESET_BINGO:\n      return ({\n        ...state,\n        showBingo: false,\n        hasHadBingo: false\n      })\n    case LOG_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport default User;","const { ADD_MESSAGE, RESET_MESSAGES } = require(\"../actions/actionTypes\");\n\nconst initialState = [];\n\nconst Log = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return [...state, action.message];\n    case RESET_MESSAGES:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport default Log;","import { combineReducers } from 'redux';\nimport Bingo from './Bingo';\nimport User from './User';\nimport Log from './Log';\n\nconst rootReducer = combineReducers({Bingo, User, Log});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport socketMiddleware from './middleware/socket';\nimport reducer from './reducers';\n\nconst store = process.env.NODE_ENV === 'development' ? createStore(reducer, composeWithDevTools(applyMiddleware(socketMiddleware, thunk))): createStore(reducer, applyMiddleware(socketMiddleware, thunk));\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\nimport { purple, green} from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n  palette:{\n    primary: {\n      main: purple[500]\n    },\n    secondary: {\n      main: green[500]\n    },\n  },\n  overrides: {\n    MuiTextField: {\n      root: {\n        margin: 10\n      }\n    }\n  }\n})\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}